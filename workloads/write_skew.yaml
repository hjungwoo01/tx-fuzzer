database:
  kind: postgres
  dsn: "postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable"

init_schema: false

workload:
  datatype: register
  transactions:
    # Transaction 1: classic write-skew (two reads, two writes)
    - name: transfer
      isolation: "REPEATABLE READ"
      timeout: "2s"
      steps:
        # Choose two *distinct* keys for cross-dependency
        - sql: "BEGIN;"
        - sql: "SELECT v FROM kv WHERE k = $1"
          args: [{choice: {from: ["k1","k2","k3","k4"]}}]
          elle: {f: ":read", key: "$1", value_from_result_col: 0}
        - sql: "SELECT v FROM kv WHERE k = $2 AND $1::text IS NOT NULL"
          args:
            - "$1"
            - {choice: {from: ["k1","k2","k3","k4"]}}
          elle: {f: ":read", key: "$2", value_from_result_col: 0}

        # decrement one key, increment another
        - sql: "UPDATE kv SET v = v - 1 WHERE k = $1 AND $2::text IS NOT NULL"
          args:
            - "$1"
            - "$2"
          elle: {f: ":write", key: "$1"}
        - sql: "UPDATE kv SET v = v + 1 WHERE k = $1"
          args:
            - "$2"
          elle: {f: ":write", key: "$1"}
        - sql: "COMMIT;"

    # Transaction 2: simple single-key update
    - name: update
      isolation: "READ COMMITTED"
      timeout: "2s"
      steps:
        - sql: "BEGIN;"
        - sql: "SELECT v FROM kv WHERE k = $1"
          args: [{choice: {from: ["k1","k2","k3","k4"]}}]
          elle: {f: ":read", key: "$1", value_from_result_col: 0}
        - sql: "UPDATE kv SET v = v + 1 WHERE k = $1"
          args: ["$1"]
          elle: {f: ":write", key: "$1"}
        - sql: "COMMIT;"

    # Transaction 3: read-only checker
    - name: read-pair
      isolation: "READ COMMITTED"
      timeout: "1s"
      steps:
        - sql: "SELECT v FROM kv WHERE k IN ('k1','k2','k3','k4')"
          elle: {f: ":read", key: "all", value_from_result_col: 0}

  mix:
    - txn: transfer
      weight: 0.5
    - txn: update
      weight: 0.3
    - txn: read-pair
      weight: 0.2

scheduling:
  duration: "10s"
  clients: 10
  barrier_every: 0
  random_kill_pct: 0
  jitter_ms_min: 1
  jitter_ms_max: 5
  
